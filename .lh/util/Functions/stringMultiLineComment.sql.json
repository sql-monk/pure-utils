{
    "sourceFile": "util/Functions/stringMultiLineComment.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1758025879676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758026224723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n # Returns\r\n TABLE - Повертає таблицю з колонками:\r\n - description NVARCHAR(MAX) - Весь рядок для параметра або опису\r\n-- minor NVARCHAR(128) - NULL для загального опису, назва параметра для # Parameters/# Columns\r\n+- minor NVARCHAR(128) - NULL для загального опису, перше слово для # Parameters/# Columns\r\n - returns NVARCHAR(MAX) - NULL для процедур, опис повернення для функцій\r\n - usage NVARCHAR(MAX) - Приклади використання\r\n \r\n # Usage\r\n@@ -27,11 +27,11 @@\n     WITH CleanLines AS (\r\n         -- Очищуємо коментар від /* */ та розбиваємо на рядки\r\n         SELECT \r\n             ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS line_num,\r\n-            LTRIM(RTRIM(value)) AS line_text\r\n+            LTRIM(RTRIM(REPLACE(value, CHAR(9), CHAR(32)))) AS line_text\r\n         FROM STRING_SPLIT(REPLACE(REPLACE(@string, '/*', ''), '*/', ''), CHAR(10))\r\n-        WHERE LEN(LTRIM(RTRIM(value))) > 0\r\n+        WHERE LEN(LTRIM(RTRIM(REPLACE(value, CHAR(9), CHAR(32))))) > 0\r\n     ),\r\n     SectionMarkers AS (\r\n         -- Знаходимо заголовки секцій та призначаємо поточну секцію кожному рядку\r\n         SELECT \r\n@@ -39,9 +39,9 @@\n             line_text,\r\n             CASE WHEN line_text LIKE '# %' THEN 1 ELSE 0 END AS is_section_header,\r\n             CASE \r\n                 WHEN line_text LIKE '# Description%' THEN 'description'\r\n-                WHEN line_text LIKE '# Parameters%' OR line_text LIKE '# Columns%' THEN 'parameters'\r\n+                WHEN line_text LIKE '# Parameters%' OR line_text LIKE '# Columns%' THEN 'minor'\r\n                 WHEN line_text LIKE '# Returns%' THEN 'returns'\r\n                 WHEN line_text LIKE '# Usage%' THEN 'usage'\r\n                 ELSE NULL\r\n             END AS section_name\r\n@@ -63,13 +63,15 @@\n     ContentLines AS (\r\n         -- Отримуємо тільки рядки з контентом (без заголовків секцій)\r\n         SELECT \r\n             current_section,\r\n-            line_text,\r\n-            -- Виділяємо назву параметра для секції parameters\r\n+            LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32)))) AS line_text,\r\n+            -- Виділяємо перше слово як ім'я параметра/колонки для секції minor\r\n             CASE \r\n-                WHEN current_section = 'parameters' AND line_text LIKE '@%' THEN\r\n-                    LEFT(line_text, COALESCE(NULLIF(CHARINDEX(' ', line_text), 0), LEN(line_text) + 1) - 1)\r\n+                WHEN current_section = 'minor' THEN\r\n+                    LEFT(LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32)))), \r\n+                         COALESCE(NULLIF(CHARINDEX(' ', LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32))))), 0), \r\n+                                  LEN(LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32))))) + 1) - 1)\r\n                 ELSE NULL\r\n             END AS param_name\r\n         FROM WithCurrentSection\r\n         WHERE is_section_header = 0 AND current_section IS NOT NULL\r\n@@ -110,15 +112,15 @@\n     CROSS JOIN (SELECT content FROM SectionContent WHERE section_name = 'usage') sc3\r\n     \r\n     UNION ALL\r\n     \r\n-    -- Для кожного параметра окремий рядок\r\n+    -- Для кожного параметра/колонки окремий рядок\r\n     SELECT \r\n         cl.line_text AS description,\r\n         cl.param_name AS minor,\r\n         sc2.content AS returns,\r\n         sc3.content AS usage\r\n     FROM ContentLines cl\r\n     CROSS JOIN (SELECT ISNULL(content, '') AS content FROM SectionContent WHERE section_name = 'returns') sc2\r\n     CROSS JOIN (SELECT ISNULL(content, '') AS content FROM SectionContent WHERE section_name = 'usage') sc3\r\n-    WHERE cl.current_section = 'parameters' AND cl.param_name IS NOT NULL\r\n+    WHERE cl.current_section = 'minor' AND cl.param_name IS NOT NULL\r\n );\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758026516811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,14 +67,13 @@\n             LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32)))) AS line_text,\r\n             -- Виділяємо перше слово як ім'я параметра/колонки для секції minor\r\n             CASE \r\n                 WHEN current_section = 'minor' THEN\r\n-                    LEFT(LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32)))), \r\n-                         COALESCE(NULLIF(CHARINDEX(' ', LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32))))), 0), \r\n-                                  LEN(LTRIM(RTRIM(REPLACE(line_text, CHAR(9), CHAR(32))))) + 1) - 1)\r\n+                    minor.name\r\n                 ELSE NULL\r\n             END AS param_name\r\n         FROM WithCurrentSection\r\n+            OUTER APPLY(select s.value name from STRING_SPLIT(TRIM(REPLACE(line_text, CHAR(9), CHAR(32))), CHAR(32), 1) WHERE ordinal = 1 and current_section='minor') minor\r\n         WHERE is_section_header = 0 AND current_section IS NOT NULL\r\n     ),\r\n     -- Агрегуємо контент по секціях\r\n     SectionContent AS (\r\n"
                }
            ],
            "date": 1758025879676,
            "name": "Commit-0",
            "content": "/*\r\n# Description\r\nРозбирає багаторядковий коментар і повертає структуровану інформацію по секціях.\r\nФункція аналізує коментарі за стандартним форматом документації та виділяє основні секції.\r\n\r\n# Parameters\r\n@string NVARCHAR(MAX) - Багаторядковий коментар для розбору\r\n\r\n# Returns\r\nTABLE - Повертає таблицю з колонками:\r\n- description NVARCHAR(MAX) - Весь рядок для параметра або опису\r\n- minor NVARCHAR(128) - NULL для загального опису, назва параметра для # Parameters/# Columns\r\n- returns NVARCHAR(MAX) - NULL для процедур, опис повернення для функцій\r\n- usage NVARCHAR(MAX) - Приклади використання\r\n\r\n# Usage\r\n-- Розібрати коментар функції\r\nSELECT * FROM util.stringMultiLineComment(@commentString);\r\n\r\n-- Отримати тільки опис параметрів\r\nSELECT * FROM util.stringMultiLineComment(@commentString) WHERE minor IS NOT NULL;\r\n*/\r\nCREATE FUNCTION util.stringMultiLineComment(@string NVARCHAR(MAX))\r\nRETURNS TABLE\r\nAS\r\nRETURN(\r\n    WITH CleanLines AS (\r\n        -- Очищуємо коментар від /* */ та розбиваємо на рядки\r\n        SELECT \r\n            ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS line_num,\r\n            LTRIM(RTRIM(value)) AS line_text\r\n        FROM STRING_SPLIT(REPLACE(REPLACE(@string, '/*', ''), '*/', ''), CHAR(10))\r\n        WHERE LEN(LTRIM(RTRIM(value))) > 0\r\n    ),\r\n    SectionMarkers AS (\r\n        -- Знаходимо заголовки секцій та призначаємо поточну секцію кожному рядку\r\n        SELECT \r\n            line_num,\r\n            line_text,\r\n            CASE WHEN line_text LIKE '# %' THEN 1 ELSE 0 END AS is_section_header,\r\n            CASE \r\n                WHEN line_text LIKE '# Description%' THEN 'description'\r\n                WHEN line_text LIKE '# Parameters%' OR line_text LIKE '# Columns%' THEN 'parameters'\r\n                WHEN line_text LIKE '# Returns%' THEN 'returns'\r\n                WHEN line_text LIKE '# Usage%' THEN 'usage'\r\n                ELSE NULL\r\n            END AS section_name\r\n        FROM CleanLines\r\n    ),\r\n    WithCurrentSection AS (\r\n        -- Додаємо поточну секцію до кожного рядка\r\n        SELECT \r\n            line_num,\r\n            line_text,\r\n            is_section_header,\r\n            section_name,\r\n            LAST_VALUE(section_name) OVER (\r\n                ORDER BY line_num \r\n                ROWS UNBOUNDED PRECEDING\r\n            ) AS current_section\r\n        FROM SectionMarkers\r\n    ),\r\n    ContentLines AS (\r\n        -- Отримуємо тільки рядки з контентом (без заголовків секцій)\r\n        SELECT \r\n            current_section,\r\n            line_text,\r\n            -- Виділяємо назву параметра для секції parameters\r\n            CASE \r\n                WHEN current_section = 'parameters' AND line_text LIKE '@%' THEN\r\n                    LEFT(line_text, COALESCE(NULLIF(CHARINDEX(' ', line_text), 0), LEN(line_text) + 1) - 1)\r\n                ELSE NULL\r\n            END AS param_name\r\n        FROM WithCurrentSection\r\n        WHERE is_section_header = 0 AND current_section IS NOT NULL\r\n    ),\r\n    -- Агрегуємо контент по секціях\r\n    SectionContent AS (\r\n        SELECT \r\n            'description' AS section_name,\r\n            STRING_AGG(line_text, CHAR(10)) AS content\r\n        FROM ContentLines \r\n        WHERE current_section = 'description'\r\n        \r\n        UNION ALL\r\n        \r\n        SELECT \r\n            'returns' AS section_name,\r\n            STRING_AGG(line_text, CHAR(10)) AS content\r\n        FROM ContentLines \r\n        WHERE current_section = 'returns'\r\n        \r\n        UNION ALL\r\n        \r\n        SELECT \r\n            'usage' AS section_name,\r\n            STRING_AGG(line_text, CHAR(10)) AS content\r\n        FROM ContentLines \r\n        WHERE current_section = 'usage'\r\n    )\r\n    -- Формуємо фінальний результат\r\n    SELECT \r\n        -- Для загального опису\r\n        sc1.content AS description,\r\n        NULL AS minor,\r\n        sc2.content AS returns,\r\n        sc3.content AS usage\r\n    FROM (SELECT content FROM SectionContent WHERE section_name = 'description') sc1\r\n    CROSS JOIN (SELECT content FROM SectionContent WHERE section_name = 'returns') sc2\r\n    CROSS JOIN (SELECT content FROM SectionContent WHERE section_name = 'usage') sc3\r\n    \r\n    UNION ALL\r\n    \r\n    -- Для кожного параметра окремий рядок\r\n    SELECT \r\n        cl.line_text AS description,\r\n        cl.param_name AS minor,\r\n        sc2.content AS returns,\r\n        sc3.content AS usage\r\n    FROM ContentLines cl\r\n    CROSS JOIN (SELECT ISNULL(content, '') AS content FROM SectionContent WHERE section_name = 'returns') sc2\r\n    CROSS JOIN (SELECT ISNULL(content, '') AS content FROM SectionContent WHERE section_name = 'usage') sc3\r\n    WHERE cl.current_section = 'parameters' AND cl.param_name IS NOT NULL\r\n);"
        }
    ]
}