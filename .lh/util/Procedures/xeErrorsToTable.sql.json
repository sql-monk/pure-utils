{
    "sourceFile": "util/Procedures/xeErrorsToTable.sql",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1758022184850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758024321043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,21 @@\n+/*\r\n+# Description\r\n+Процедура для перенесення даних про помилки з Extended Events до таблиці util.xeErrorLog.\r\n+Читає дані з системних сесій XE та зберігає їх у структурованому вигляді для подальшого аналізу.\r\n+\r\n+# Parameters\r\n+Без параметрів\r\n+\r\n+# Returns\r\n+Нічого не повертає. Вставляє записи про помилки в таблицю util.xeErrorLog\r\n+\r\n+# Usage\r\n+-- Перенести нові помилки з XE до таблиці\r\n+EXEC util.xeErrorsToTable;\r\n+\r\n+-- Можна викликати по розкладу для регулярного збору помилок\r\n+*/\r\n CREATE PROCEDURE util.xeErrorsToTable\r\n AS\r\n BEGIN\r\n \tSET NOCOUNT ON;\r\n"
                }
            ],
            "date": 1758022184850,
            "name": "Commit-0",
            "content": "CREATE PROCEDURE util.xeErrorsToTable\r\nAS\r\nBEGIN\r\n\tSET NOCOUNT ON;\r\n\tSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\r\n\r\n\tDECLARE @LastProcessedFileName NVARCHAR(260) = NULL;\r\n\tDECLARE @LastProcessedFileOffset BIGINT;\r\n\tDECLARE @LastProcessedTimestamp DATETIME2(7);\r\n\r\n\t-- Get the last processed position\r\n\tSELECT TOP 1\r\n\t\t@LastProcessedFileName = FileName,\r\n\t\t@LastProcessedFileOffset = FileOffset,\r\n\t\t@LastProcessedTimestamp = EventTime\r\n\tFROM util.xeErrorLog\r\n\tORDER BY id DESC;\r\n\r\n \r\n\tBEGIN TRY\r\n \r\n \r\n\t\tWITH xe_data AS (\r\n\t\t\tSELECT\r\n\t\t\t\tCAST(event_data AS XML) event_data,\r\n\t\t\t\tfile_name,\r\n\t\t\t\tfile_offset\r\n\t\t\tFROM sys.fn_xe_file_target_read_file('utilsErrors*.xel', NULL, @LastProcessedFileName, @LastProcessedFileOffset)\r\n\t\t)\r\n\t\tINSERT INTO util.xeErrorLog(EventTime,\r\n\t\t\tErrorNumber,\r\n\t\t\tSeverity,\r\n\t\t\tState,\r\n\t\t\tMessage,\r\n\t\t\tDatabaseName,\r\n\t\t\tClientHostname,\r\n\t\t\tClientAppName,\r\n\t\t\tServerPrincipalName,\r\n\t\t\tSqlText,\r\n\t\t\tTsqlFrame,\r\n\t\t\tTsqlStack,\r\n\t\t\tFileName,\r\n\t\t\tFileOffset)\r\n\t\tSELECT\r\n\t\t\txe_data.event_data.value('(event/@timestamp)[1]', 'DATETIME2(7)') EventTime,\r\n\t\t\txe_data.event_data.value('(event/data[@name=\"error_number\"]/value)[1]', 'INT') ErrorNumber,\r\n\t\t\txe_data.event_data.value('(event/data[@name=\"severity\"]/value)[1]', 'INT') Severity,\r\n\t\t\txe_data.event_data.value('(event/data[@name=\"state\"]/value)[1]', 'INT') State,\r\n\t\t\txe_data.event_data.value('(event/data[@name=\"message\"]/value)[1]', 'NVARCHAR(4000)') Message,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"database_name\"]/value)[1]', 'NVARCHAR(128)') DatabaseName,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"client_hostname\"]/value)[1]', 'NVARCHAR(128)') ClientHostname,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"client_app_name\"]/value)[1]', 'NVARCHAR(128)') ClientAppName,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"server_principal_name\"]/value)[1]', 'NVARCHAR(128)') ServerPrincipalName,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"sql_text\"]/value)[1]', 'NVARCHAR(MAX)') SqlText,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"tsql_frame\"]/value)[1]', 'NVARCHAR(MAX)') TsqlFrame,\r\n\t\t\txe_data.event_data.value('(event/action[@name=\"tsql_stack\"]/value)[1]', 'NVARCHAR(MAX)') TsqlStack,\r\n\t\t\txe_data.file_name FileName,\r\n\t\t\txe_data.file_offset FileOffset\r\n\t\tFROM xe_data\r\n\t\tWHERE\r\n\t\t\t-- Only get events newer than what we've already processed\r\n\t\t\t(\r\n\t\t\t@LastProcessedFileName IS NULL\r\n\t\t\tOR xe_data.file_name > @LastProcessedFileName\r\n\t\t\tOR (xe_data.file_name = @LastProcessedFileName AND xe_data.file_offset > @LastProcessedFileOffset)\r\n\t\t)\r\n\t\t\tAND (@LastProcessedTimestamp IS NULL OR xe_data.event_data.value('(event/@timestamp)[1]', 'DATETIME2(7)') > @LastProcessedTimestamp)\r\n\t\tORDER BY EventTime;\r\n\r\n\tEND TRY\r\n\tBEGIN CATCH\r\n\t\t-- Log the error using our error handler\r\n\t\tEXEC util.errorHandler;\r\n\tEND CATCH;\r\n\r\nEND;"
        }
    ]
}